{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Login.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst useFormField = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  return [value, e => setValue(e.target.value)];\n};\n\nconst Login = () => {\n  const _useFormField = useFormField(),\n        _useFormField2 = _slicedToArray(_useFormField, 2),\n        email = _useFormField2[0],\n        setEmail = _useFormField2[1];\n\n  const _useFormField3 = useFormField(),\n        _useFormField4 = _slicedToArray(_useFormField3, 2),\n        password = _useFormField4[0],\n        setPassword = _useFormField4[1];\n\n  const history = useHistory();\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isError = _useState4[0],\n        setError = _useState4[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //console.log(user)\n\n    const user = {\n      email,\n      password\n    };\n    setError(false);\n\n    try {\n      const ret = await fetch('http://localhost:3300/login', {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); //console.log(data)\n\n      const data = await ret.json(); //aqui error --> unexpected end of json at handlesubmit\n\n      localStorage.setItem('token', data.token);\n      history.push(`/users/${data.id}`);\n    } catch (err) {\n      console.warn('Error:', err);\n      setError(true);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    id: \"login\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: setEmail,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: setPassword,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Login\"), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Error, email o contrase\\xF1a incorrectos\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Login.js"],"names":["React","useState","useHistory","useFormField","value","setValue","e","target","Login","email","setEmail","password","setPassword","history","isError","setError","handleSubmit","preventDefault","user","ret","fetch","method","body","JSON","stringify","headers","data","json","localStorage","setItem","token","push","id","err","console","warn"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACGF,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,QAChBG,KADgB;AAAA,QACTC,QADS;;AAEvB,SAAO,CAACD,KAAD,EAAQE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV,CAArB,CAAP;AACH,CAHD;;AAKA,MAAMI,KAAK,GAAG,MAAM;AAAA,wBACUL,YAAY,EADtB;AAAA;AAAA,QACTM,KADS;AAAA,QACFC,QADE;;AAAA,yBAEgBP,YAAY,EAF5B;AAAA;AAAA,QAETQ,QAFS;AAAA,QAECC,WAFD;;AAIhB,QAAMC,OAAO,GAAGX,UAAU,EAA1B;;AAJgB,qBAKYD,QAAQ,CAAC,KAAD,CALpB;AAAA;AAAA,QAKTa,OALS;AAAA,QAKAC,QALA;;AAOhB,QAAMC,YAAY,GAAG,MAAOV,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACW,cAAF,GAD8B,CAE9B;;AACA,UAAMC,IAAI,GAAG;AAAET,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAb;AACAI,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAI;AACA,YAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAF6C;AAGnDO,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAH0C,OAAhC,CAAvB,CADA,CAQA;;AACA,YAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB,CATA,CAS+B;;AAC/BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAjB,MAAAA,OAAO,CAACkB,IAAR,CAAc,UAASL,IAAI,CAACM,EAAG,EAA/B;AACH,KAZD,CAYE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuBF,GAAvB;AACAlB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GArBD;;AAuBA,SACI;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,QAAQ,EAAEC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,QAAQ,MAAzC;AAA0C,IAAA,KAAK,EAAEP,KAAjD;AAAwD,IAAA,QAAQ,EAAEC,QAAlE;AAA4E,IAAA,WAAW,EAAC,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,QAAQ,MAA/C;AAAgD,IAAA,KAAK,EAAEC,QAAvD;AAAiE,IAAA,QAAQ,EAAEC,WAA3E;AAAwF,IAAA,WAAW,EAAC,UAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAIKE,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAJhB,CADJ;AAQH,CAtCD;;AAwCA,eAAeN,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst useFormField = () => {\n    const [value, setValue] = useState('')\n    return [value, e => setValue(e.target.value)]\n}\n\nconst Login = () => {\n    const [email, setEmail] = useFormField()\n    const [password, setPassword] = useFormField()\n\n    const history = useHistory()\n    const [isError, setError] = useState(false)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        //console.log(user)\n        const user = { email, password }\n        setError(false)\n        try {\n            const ret = await fetch('http://localhost:3300/login', {\n                method: 'POST',\n                body: JSON.stringify(user),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            //console.log(data)\n            const data = await ret.json()  //aqui error --> unexpected end of json at handlesubmit\n            localStorage.setItem('token', data.token)\n            history.push(`/users/${data.id}`)\n        } catch (err) {\n            console.warn('Error:', err)\n            setError(true)\n        }\n    }\n\n    return (\n        <form id=\"login\" onSubmit={handleSubmit}>\n            <input name=\"email\" type=\"email\" required value={email} onChange={setEmail} placeholder=\"Email\"/>\n            <input name=\"password\" type=\"password\" required value={password} onChange={setPassword} placeholder=\"Password\"/>\n            <button>Login</button>\n            {isError && <div>Error, email o contrase√±a incorrectos</div>}\n        </form>\n    )\n}\n\nexport default Login\n    \n\n"]},"metadata":{},"sourceType":"module"}