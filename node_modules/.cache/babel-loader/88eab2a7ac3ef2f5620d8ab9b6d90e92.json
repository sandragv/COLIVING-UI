{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/PrivateGuest/UserColivingsRating.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Radios from '../Radios';\n\nconst RatingColiving = () => {\n  const user = useSelector(s => s.user);\n  const token = useSelector(s => s.user && s.user.token);\n  const coliving = useSelector(s => s.coliving);\n\n  const _useState = useState('colivingScore'),\n        _useState2 = _slicedToArray(_useState, 2),\n        colivingScore = _useState2[0],\n        setColivingScore = _useState2[1];\n\n  const handleColivingScore = e => setColivingScore(e.target.value);\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isError = _useState4[0],\n        setError = _useState4[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const rating = {\n      colivingScore,\n      coliving,\n      user\n    };\n    setError(false);\n\n    try {\n      const ret = await fetch('http://localhost:3300/user/rating-coliving', {\n        method: 'POST',\n        body: JSON.stringify(rating),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const data = await ret.json();\n      if (ret.ok) setColivingScore(data);\n    } catch (err) {\n      console.warn('Error:', err);\n      setError(true);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    id: \"add-apartment\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Punt\\xFAa tu estancia en el coliving\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"colivingscore\",\n    value: colivingScore,\n    size: \"1\",\n    onChange: handleColivingScore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"1 estrella\"), React.createElement(\"option\", {\n    value: \"two\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"2 estrellas\"), React.createElement(\"option\", {\n    value: \"three\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"3 estrellas\"), React.createElement(\"option\", {\n    value: \"four\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"4 estrellas\"), React.createElement(\"option\", {\n    value: \"five\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"5 estrellas\"))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Enviar\"), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Error, int\\xE9ntalo de nuevo\"));\n};\n\nexport default RatingColiving;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/PrivateGuest/UserColivingsRating.js"],"names":["React","useState","useEffect","useSelector","Radios","RatingColiving","user","s","token","coliving","colivingScore","setColivingScore","handleColivingScore","e","target","value","isError","setError","handleSubmit","preventDefault","rating","ret","fetch","method","body","JSON","stringify","headers","data","json","ok","err","console","warn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Radios from '../Radios'\n\nconst RatingColiving = () => {\n    const user = useSelector(s => s.user)\n    const token = useSelector(s => s.user && s.user.token)\n    const coliving = useSelector(s => s.coliving)\n    const [colivingScore, setColivingScore] = useState('colivingScore')\n    const handleColivingScore = e => setColivingScore(e.target.value)\n\n    const [isError, setError] = useState(false)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const rating = { colivingScore, coliving, user }\n        setError(false)\n        try {\n            const ret = await fetch('http://localhost:3300/user/rating-coliving', {\n                method: 'POST',\n                body: JSON.stringify(rating),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                }\n            })\n            const data = await ret.json()\n            if (ret.ok)\n                setColivingScore(data)\n        } catch (err) {\n            console.warn('Error:', err)\n            setError(true)\n        }\n    }\n\n\n    return (\n        <form id=\"add-apartment\" onSubmit={handleSubmit}>\n            <h2>Puntúa tu estancia en el coliving</h2>\n            <div>\n            <select name=\"colivingscore\" value={colivingScore} size=\"1\" onChange={handleColivingScore} >\n                        <option value=\"one\">1 estrella</option>\n                        <option value=\"two\">2 estrellas</option>\n                        <option value=\"three\">3 estrellas</option>\n                        <option value=\"four\">4 estrellas</option>\n                        <option value=\"five\">5 estrellas</option>\n            </select>\n            </div>\n            <button>Enviar</button>\n            {isError && <div>Error, inténtalo de nuevo</div>}\n        </form>\n    )\n}\n\nexport default RatingColiving\n\n\n"]},"metadata":{},"sourceType":"module"}