{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/PrivateGuest/UserColiversRating.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst RatingColiver = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(s => s.user);\n  const token = useSelector(s => s.user && s.user.token);\n  const coliver = useSelector(s => s.user);\n  const coliving = useSelector(s => s.coliving);\n\n  const setColiverScore = coliverScore => dispatch({\n    type: 'ratingcolivers',\n    ratingcolivers\n  });\n\n  const handleColiverScore = e => setColiverScore(e.target.value);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isError = _useState2[0],\n        setError = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const score = {\n      coliverScore,\n      coliving,\n      coliver,\n      user\n    };\n    setError(false);\n\n    try {\n      const ret = await fetch('http://localhost:3300/user/rating-coliver', {\n        method: 'POST',\n        body: JSON.stringify(score),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const data = await ret.json();\n      if (ret.ok) setColiverScore(data);\n    } catch (err) {\n      console.warn('Error:', err);\n      setError(true);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    id: \"coliver-rating\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Punt\\xFAa a tus colivers\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"N\\xBA de habitaciones:\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"rooms\",\n    min: \"1\",\n    max: \"10\",\n    required: true,\n    value: rooms,\n    onChange: setRooms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"coliverscore\",\n    value: coliverScore,\n    size: \"1\",\n    onChange: handleColiverScore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"1 estrella\"), React.createElement(\"option\", {\n    value: \"two\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"2 estrellas\"), React.createElement(\"option\", {\n    value: \"three\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"3 estrellas\"), React.createElement(\"option\", {\n    value: \"four\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"4 estrellas\"), React.createElement(\"option\", {\n    value: \"five\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"5 estrellas\"))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Enviar\"), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Error, int\\xE9ntalo de nuevo\"));\n};\n\nexport default RatingColiver;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/PrivateGuest/UserColiversRating.js"],"names":["React","useState","useSelector","useDispatch","RatingColiver","dispatch","user","s","token","coliver","coliving","setColiverScore","coliverScore","type","ratingcolivers","handleColiverScore","e","target","value","isError","setError","handleSubmit","preventDefault","score","ret","fetch","method","body","JSON","stringify","headers","data","json","ok","err","console","warn","rooms","setRooms"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,IAAI,GAAGJ,WAAW,CAACK,CAAC,IAAIA,CAAC,CAACD,IAAR,CAAxB;AACA,QAAME,KAAK,GAAGN,WAAW,CAACK,CAAC,IAAIA,CAAC,CAACD,IAAF,IAAUC,CAAC,CAACD,IAAF,CAAOE,KAAvB,CAAzB;AACA,QAAMC,OAAO,GAAGP,WAAW,CAAEK,CAAC,IAAIA,CAAC,CAACD,IAAT,CAA3B;AACA,QAAMI,QAAQ,GAAGR,WAAW,CAACK,CAAC,IAAIA,CAAC,CAACG,QAAR,CAA5B;;AACA,QAAMC,eAAe,GAAGC,YAAY,IAAIP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA;AAA1B,GAAD,CAAhD;;AAEA,QAAMC,kBAAkB,GAAGC,CAAC,IAAIL,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C;;AARwB,oBAUIjB,QAAQ,CAAC,KAAD,CAVZ;AAAA;AAAA,QAUjBkB,OAViB;AAAA,QAURC,QAVQ;;AAaxB,QAAMC,YAAY,GAAG,MAAOL,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAMC,KAAK,GAAG;AAAEX,MAAAA,YAAF;AAAgBF,MAAAA,QAAhB;AAA0BD,MAAAA,OAA1B;AAAmCH,MAAAA;AAAnC,KAAd;AACAc,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAI;AACA,YAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA8C;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAF2D;AAGjEO,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiB,YAAYtB;AAFxB;AAHwD,OAA9C,CAAvB;AAQA,YAAMuB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACA,UAAIR,GAAG,CAACS,EAAR,EACItB,eAAe,CAACoB,IAAD,CAAf;AACP,KAZD,CAYE,OAAOG,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuBF,GAAvB;AACAd,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GApBD;;AAsBA,SACI;AAAM,IAAA,EAAE,EAAC,gBAAT;AAA0B,IAAA,QAAQ,EAAEC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAkC,IAAA,GAAG,EAAC,GAAtC;AAA0C,IAAA,GAAG,EAAC,IAA9C;AAAmD,IAAA,QAAQ,MAA3D;AAA4D,IAAA,KAAK,EAAEgB,KAAnE;AAA0E,IAAA,QAAQ,EAAEC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAE1B,YAAnC;AAAiD,IAAA,IAAI,EAAC,GAAtD;AAA0D,IAAA,QAAQ,EAAEG,kBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAII;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CADJ,CARJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,EAkBKI,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAlBhB,CADJ;AAsBH,CAzDD;;AA2DA,eAAef,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst RatingColiver = () => {\n    const dispatch = useDispatch()\n    const user = useSelector(s => s.user)\n    const token = useSelector(s => s.user && s.user.token)\n    const coliver = useSelector (s => s.user)\n    const coliving = useSelector(s => s.coliving)    \n    const setColiverScore = coliverScore => dispatch({ type: 'ratingcolivers', ratingcolivers})\n\n    const handleColiverScore = e => setColiverScore(e.target.value)\n\n    const [isError, setError] = useState(false)\n\n   \n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const score = { coliverScore, coliving, coliver, user }\n        setError(false)\n        try {\n            const ret = await fetch('http://localhost:3300/user/rating-coliver', {\n                method: 'POST',\n                body: JSON.stringify(score),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                }\n            })\n            const data = await ret.json()\n            if (ret.ok)\n                setColiverScore(data)\n        } catch (err) {\n            console.warn('Error:', err)\n            setError(true)\n        }\n    }\n\n    return (\n        <form id=\"coliver-rating\" onSubmit={handleSubmit}>\n            <h2>Puntúa a tus colivers</h2>\n            <div>\n                <label>\n                    Nº de habitaciones:\n                    <input type=\"number\" name=\"rooms\" min=\"1\" max=\"10\" required value={rooms} onChange={setRooms} />\n                </label>\n            </div>\n            <div>\n                <select name=\"coliverscore\" value={coliverScore} size=\"1\" onChange={handleColiverScore} >\n                    <option value=\"one\">1 estrella</option>\n                    <option value=\"two\">2 estrellas</option>\n                    <option value=\"three\">3 estrellas</option>\n                    <option value=\"four\">4 estrellas</option>\n                    <option value=\"five\">5 estrellas</option>\n                </select>\n            </div>\n            <button>Enviar</button>\n            {isError && <div>Error, inténtalo de nuevo</div>}\n        </form>\n    )\n}\n\nexport default RatingColiver\n"]},"metadata":{},"sourceType":"module"}