{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/ValidateForm.js\";\nimport React, { useState } from \"react\";\n\nconst ValidateForm = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        surname = _useState4[0],\n        setSurname = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        nameError = _useState8[0],\n        setNameError = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        surnameError = _useState10[0],\n        setSurnameError = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        emailError = _useState12[0],\n        setEmailError = _useState12[1];\n\n  const _useState13 = useState({}),\n        _useState14 = _slicedToArray(_useState13, 2),\n        error = _useState14[0],\n        setError = _useState14[1];\n\n  const validate = () => {\n    let nameError = \"\";\n    let surnameError = \"\";\n    let emailError = \"\";\n\n    if (!name) {\n      nameError = \"El nombre no puede estar vacío\";\n    }\n\n    if (typeof name !== \"undefined\") {\n      if (!name.match(/^[a-zA-Z]+$/)) {\n        nameError = \"El nombre solo puede contener letras\";\n      }\n\n      if (!surname) {\n        surnameError = \"El apellido no puede estar vacío\";\n      }\n\n      if (typeof surname !== \"undefined\") {\n        if (!name.match(/^[a-zA-Z]+$/)) {\n          surnameError = \"El apellido solo puede contener letras\";\n        }\n\n        if (!email) {\n          emailError = \"El email no puede estar vacío\";\n        }\n\n        if (!email.includes(\"@\")) {\n          emailError = \"El email no es válido\";\n        }\n\n        if (nameError || surnameError || emailError) {\n          setError({\n            nameError,\n            surnameError,\n            emailError\n          });\n          return false;\n        }\n\n        return true;\n      }\n\n      ;\n\n      const handleSubmit = event => {\n        event.preventDefault();\n        const isValid = validate();\n\n        if (isValid) {\n          setState('');\n        }\n      };\n\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"name\",\n        value: name,\n        onChange: setName,\n        placeholder: \"Nombre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \", nameError, \" \")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"surname\",\n        value: surname,\n        onChange: setSurname,\n        placeholder: \"Apellido\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" \", surnameError, \" \")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"email\",\n        value: email,\n        onChange: setEmail,\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \" \", emailError, \" \")), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Enviar\"));\n    }\n  };\n};\n\nexport default ValidateForm;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/ValidateForm.js"],"names":["React","useState","ValidateForm","name","setName","surname","setSurname","email","setEmail","nameError","setNameError","surnameError","setSurnameError","emailError","setEmailError","error","setError","validate","match","includes","handleSubmit","event","preventDefault","isValid","setState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst ValidateForm = () => {\n    const [name, setName] = useState('')\n    const [surname, setSurname] = useState('')\n    const [email, setEmail] = useState('')\n    const [nameError, setNameError] = useState('')\n    const [surnameError, setSurnameError] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [error, setError] = useState({})\n\n    const validate = () => {\n        let nameError = \"\";\n        let surnameError = \"\";\n        let emailError = \"\";\n\n        if (!name) {\n            nameError = \"El nombre no puede estar vacío\";\n        }\n        if (typeof name !== \"undefined\") {\n            if (!name.match(/^[a-zA-Z]+$/)) {\n                nameError = \"El nombre solo puede contener letras\";\n            }\n\n            if (!surname) {\n                surnameError = \"El apellido no puede estar vacío\";\n            }\n\n            if (typeof surname !== \"undefined\") {\n                if (!name.match(/^[a-zA-Z]+$/)) {\n                    surnameError = \"El apellido solo puede contener letras\";\n                }\n\n                if (!email) {\n                    emailError = \"El email no puede estar vacío\";\n                }\n\n                if (!email.includes(\"@\")) {\n                    emailError = \"El email no es válido\";\n                }\n\n                if (nameError || surnameError || emailError) {\n                    setError({ nameError, surnameError, emailError });\n                    return false;\n                }\n\n                return true;\n            };\n\n            const handleSubmit = event => {\n                event.preventDefault();\n                const isValid = validate();\n                if (isValid) {\n                    setState('');\n                }\n            };\n\n            return (\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <input name=\"name\" value={name} onChange={setName} placeholder=\"Nombre\" />\n                        <div className=\"form-error\"> {nameError} </div>\n                    </div>\n                    <div>\n                        <input name=\"surname\" value={surname} onChange={setSurname} placeholder=\"Apellido\" />\n                        <div className=\"form-error\"> {surnameError} </div>\n                    </div>\n                    <div>\n                        <input name=\"email\" value={email} onChange={setEmail} placeholder=\"Email\" />\n                        <div className=\"form-error\"> {emailError} </div>\n                    </div>\n                    <button>Enviar</button>\n                </form>\n            );\n        }\n    }\n}\n\nexport default ValidateForm\n"]},"metadata":{},"sourceType":"module"}