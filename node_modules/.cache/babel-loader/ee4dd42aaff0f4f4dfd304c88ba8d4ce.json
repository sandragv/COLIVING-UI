{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport './Login.css';\n\nconst Test = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        fields = _useState2[0],\n        setFields = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  handleValidation = () => {\n    let formIsValid = true;\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"El nombre no puede estar vacío\";\n    }\n\n    if (typeof fields[\"name\"] !== \"undefined\") {\n      if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"El nombre sólo puede contener letras\";\n      }\n    }\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"El email no puede estar vacío\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"El formato de email no es válido\";\n      }\n    }\n\n    let errors = setErrors({\n      errors: errors\n    });\n    return formIsValid;\n  };\n};\n\nconst useFormField = () => {\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        value = _useState6[0],\n        setValue = _useState6[1];\n\n  return [value, e => setValue(e.target.value)];\n};\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const login = user => dispatch({\n    type: 'login',\n    user\n  });\n\n  const _useFormField = useFormField(),\n        _useFormField2 = _slicedToArray(_useFormField, 2),\n        email = _useFormField2[0],\n        setEmail = _useFormField2[1];\n\n  const _useFormField3 = useFormField(),\n        _useFormField4 = _slicedToArray(_useFormField3, 2),\n        password = _useFormField4[0],\n        setPassword = _useFormField4[1];\n\n  const history = useHistory();\n  const isLoggedIn = useSelector(s => !!s.user);\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push(`/user`);\n    }\n  }, [isLoggedIn]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      email,\n      password\n    };\n\n    if (handleValidation()) {\n      alert(\"Enviado!\");\n    } else {\n      alert(\"Error, email o contraseña incorrectos\");\n\n      try {\n        const ret = await fetch('http://localhost:3300/login', {\n          method: 'POST',\n          body: JSON.stringify(user),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await ret.json();\n        if (ret.ok) login(data);\n      } catch (err) {\n        console.warn('Error:', err);\n      }\n    }\n\n    return React.createElement(\"form\", {\n      id: \"login\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      required: true,\n      value: email,\n      onChange: setEmail,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      required: true,\n      value: password,\n      onChange: setPassword,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Login\"));\n  };\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Login.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","Test","fields","setFields","errors","setErrors","handleValidation","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","useFormField","value","setValue","e","target","Login","dispatch","login","user","type","email","setEmail","password","setPassword","history","isLoggedIn","s","push","handleSubmit","preventDefault","alert","ret","fetch","method","body","JSON","stringify","headers","data","json","ok","err","console","warn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport './Login.css'\n\nconst Test = () => {\n    const [fields, setFields] = useState('')\n    const [errors, setErrors] = useState({})\n\n    handleValidation = () => {\n        let formIsValid = true;\n\n        if (!fields[\"name\"]) {\n            formIsValid = false;\n            errors[\"name\"] = \"El nombre no puede estar vacío\";\n        }\n        if (typeof fields[\"name\"] !== \"undefined\") {\n            if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n                formIsValid = false;\n                errors[\"name\"] = \"El nombre sólo puede contener letras\";\n            }\n        }\n\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"El email no puede estar vacío\";\n        }\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            let lastAtPos = fields[\"email\"].lastIndexOf('@');\n            let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n                formIsValid = false;\n                errors[\"email\"] = \"El formato de email no es válido\";\n            }\n        }\n\n        let errors = setErrors({ errors: errors });\n        return formIsValid;\n\n    }\n}\n\nconst useFormField = () => {\n    const [value, setValue] = useState('')\n    return [value, e => setValue(e.target.value)]\n}\n\nconst Login = () => {\n    const dispatch = useDispatch()\n    const login = (user) => dispatch({ type: 'login', user })\n    const [email, setEmail] = useFormField()\n    const [password, setPassword] = useFormField()\n\n    const history = useHistory()\n\n    const isLoggedIn = useSelector(s => !!s.user)\n    useEffect(() => {\n        if (isLoggedIn) {\n            history.push(`/user`)\n        }\n    }, [isLoggedIn])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const user = { email, password }\n        if (handleValidation()) {\n            alert(\"Enviado!\");\n        } else {\n            alert(\"Error, email o contraseña incorrectos\")\n            try {\n                const ret = await fetch('http://localhost:3300/login', {\n                    method: 'POST',\n                    body: JSON.stringify(user),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                const data = await ret.json()\n                if (ret.ok)\n                    login(data)\n            } catch (err) {\n                console.warn('Error:', err)\n            }\n        }\n\n        return (\n            <form id=\"login\" onSubmit={handleSubmit}>\n                <input name=\"email\" type=\"email\" required value={email} onChange={setEmail} placeholder=\"Email\" />\n                <input name=\"password\" type=\"password\" required value={password} onChange={setPassword} placeholder=\"Password\" />\n                <button>Login</button>\n            </form>\n        )\n    }\n}\n\nexport default Login\n\n\n"]},"metadata":{},"sourceType":"module"}