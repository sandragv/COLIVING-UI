{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/ContactForm.js\";\nimport React, { useState } from 'react';\n\nconst useFormField = valorInicial => {\n  const _useState = useState(valorInicial || ''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const handleChange = e => setValue(e.target.value);\n\n  return [value, handleChange];\n};\n\nconst ContactForm = () => {\n  const _useFormField = useFormField(),\n        _useFormField2 = _slicedToArray(_useFormField, 2),\n        name = _useFormField2[0],\n        handleName = _useFormField2[1];\n\n  const _useFormField3 = useFormField(),\n        _useFormField4 = _slicedToArray(_useFormField3, 2),\n        email = _useFormField4[0],\n        handleEmail = _useFormField4[1];\n\n  const _useFormField5 = useFormField(),\n        _useFormField6 = _slicedToArray(_useFormField5, 2),\n        message = _useFormField6[0],\n        handleMessage = _useFormField6[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      name,\n      email,\n      message\n    };\n    setStatus('loading...');\n    await fetch('', {\n      method: 'POST',\n      body: JSON.stringify(user)\n    });\n    setStatus('Mensaje enviado!');\n  };\n\n  if (status === 'loading') {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Tu mensaje se est\\xE1 enviando\");\n  }\n\n  return React.createElement(\"div\", {\n    id: \"contact-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: name,\n    required: true,\n    onChange: handleName,\n    placeholder: \"Nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: handleEmail,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    value: message,\n    required: true,\n    rows: \"10\",\n    cols: \"50\",\n    onChange: handleMessage,\n    placeholder: \"Tu mensaje\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Enviar\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, status)));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/ContactForm.js"],"names":["React","useState","useFormField","valorInicial","value","setValue","handleChange","e","target","ContactForm","name","handleName","email","handleEmail","message","handleMessage","status","setStatus","handleSubmit","preventDefault","user","fetch","method","body","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,YAAY,GAAIC,YAAD,IAAkB;AAAA,oBACTF,QAAQ,CAACE,YAAY,IAAI,EAAjB,CADC;AAAA;AAAA,QAC5BC,KAD4B;AAAA,QACrBC,QADqB;;AAEnC,QAAMC,YAAY,GAAGC,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAlC;;AACA,SAAO,CAACA,KAAD,EAAQE,YAAR,CAAP;AACH,CAJD;;AAMA,MAAMG,WAAW,GAAG,MAAM;AAAA,wBACKP,YAAY,EADjB;AAAA;AAAA,QACfQ,IADe;AAAA,QACTC,UADS;;AAAA,yBAEOT,YAAY,EAFnB;AAAA;AAAA,QAEfU,KAFe;AAAA,QAERC,WAFQ;;AAAA,yBAGWX,YAAY,EAHvB;AAAA;AAAA,QAGfY,OAHe;AAAA,QAGNC,aAHM;;AAAA,qBAIMd,QAAQ,EAJd;AAAA;AAAA,QAIfe,MAJe;AAAA,QAIPC,SAJO;;AAMtB,QAAMC,YAAY,GAAG,MAAMX,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACY,cAAF;AACA,UAAMC,IAAI,GAAG;AAAEV,MAAAA,IAAF;AAAQE,MAAAA,KAAR;AAAeE,MAAAA;AAAf,KAAb;AACAG,IAAAA,SAAS,CAAC,YAAD,CAAT;AACA,UAAMI,KAAK,CAAC,EAAD,EAAK;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFM,KAAL,CAAX;AAIAH,IAAAA,SAAS,CAAC,kBAAD,CAAT;AACH,GATD;;AAWA,MAAID,MAAM,KAAK,SAAf,EAA0B;AACtB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ;AAGH;;AAED,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAER,IAAd;AAAoB,IAAA,QAAQ,MAA5B;AAA6B,IAAA,QAAQ,EAAEC,UAAvC;AAAmD,IAAA,WAAW,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,MAA5B;AAA6B,IAAA,KAAK,EAAEC,KAApC;AAA2C,IAAA,QAAQ,EAAEC,WAArD;AAAkE,IAAA,WAAW,EAAC,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAU,IAAA,KAAK,EAAEC,OAAjB;AAA0B,IAAA,QAAQ,MAAlC;AAAmC,IAAA,IAAI,EAAC,IAAxC;AAA6C,IAAA,IAAI,EAAC,IAAlD;AAAuD,IAAA,QAAQ,EAAEC,aAAjE;AAAgF,IAAA,WAAW,EAAC,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,MAAJ,CALJ,CADJ,CADJ;AAYH,CAnCD;;AAqCA,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react'\n\n\nconst useFormField = (valorInicial) => {\n    const [value, setValue] = useState(valorInicial || '')\n    const handleChange = e => setValue(e.target.value)\n    return [value, handleChange]\n}\n\nconst ContactForm = () => {\n    const [name, handleName] = useFormField()\n    const [email, handleEmail] = useFormField()\n    const [message, handleMessage] = useFormField()\n    const [status, setStatus] = useState()\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        const user = { name, email, message }\n        setStatus('loading...')\n        await fetch('', {\n            method: 'POST',\n            body: JSON.stringify(user)\n        })\n        setStatus('Mensaje enviado!')\n    }\n\n    if (status === 'loading') {\n        return (\n            <p>Tu mensaje se est√° enviando</p>\n        )\n    }\n\n    return (\n        <div id=\"contact-form\">\n            <form onSubmit={handleSubmit}>\n                <input value={name} required onChange={handleName} placeholder=\"Nombre\" />\n                <input type=\"email\" required value={email} onChange={handleEmail} placeholder=\"Email\" />\n                <textarea value={message} required rows=\"10\" cols=\"50\" onChange={handleMessage} placeholder=\"Tu mensaje\" />\n                <button>Enviar</button>\n                <p>{status}</p>\n            </form>\n\n        </div>\n    );\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}