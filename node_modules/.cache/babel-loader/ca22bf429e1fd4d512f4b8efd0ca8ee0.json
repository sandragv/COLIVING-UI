{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/COOLIVING/COLIVING-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/COOLIVING/COLIVING-UI/src/PrivateGuest/UserColiversRating.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst RatingColiver = () => {\n  const user = useSelector(s => s.user);\n  const token = useSelector(s => s.user && s.user.token);\n  const coliving = useSelector(s => s.coliving);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        coliver = _useState2[0],\n        setColiver = _useState2[1];\n\n  const _useState3 = useState('coliverScore'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        coliverScore = _useState4[0],\n        setColiverScore = _useState4[1];\n\n  const handleColiverScore = e => setColiverScore(e.target.value);\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isError = _useState6[0],\n        setError = _useState6[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const score = {\n      coliverScore,\n      coliver\n    };\n    setError(false);\n\n    try {\n      const ret = await fetch('http://localhost:3300/user/coliver/rate', {\n        method: 'POST',\n        body: JSON.stringify(score),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const data = await ret.json();\n      if (ret.ok) setColiverScore(data);\n    } catch (err) {\n      console.warn('Error:', err);\n      setError(true);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    id: \"coliver-rating\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Punt\\xFAa a tus compa\\xF1eros\"), React.createElement(\"div\", {\n    className: \"scorer-elements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Nombre coliver:\", React.createElement(\"input\", {\n    className: \"scored-item\",\n    name: \"coliver\",\n    required: true,\n    value: coliver.name,\n    onChange: setColiver,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"scorer-elements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Puntuaci\\xF3n:\", React.createElement(\"select\", {\n    className: \"score\",\n    name: \"coliverscore\",\n    value: coliverScore,\n    size: \"1\",\n    onChange: handleColiverScore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"1 estrella\"), React.createElement(\"option\", {\n    value: \"two\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"2 estrellas\"), React.createElement(\"option\", {\n    value: \"three\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"3 estrellas\"), React.createElement(\"option\", {\n    value: \"four\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"4 estrellas\"), React.createElement(\"option\", {\n    value: \"five\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"5 estrellas\")))), React.createElement(\"button\", {\n    className: \"save-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Enviar\"), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Error, int\\xE9ntalo de nuevo\"));\n};\n\nexport default RatingColiver;","map":{"version":3,"sources":["/home/hab23/Documents/COOLIVING/COLIVING-UI/src/PrivateGuest/UserColiversRating.js"],"names":["React","useState","useSelector","RatingColiver","user","s","token","coliving","coliver","setColiver","coliverScore","setColiverScore","handleColiverScore","e","target","value","isError","setError","handleSubmit","preventDefault","score","ret","fetch","method","body","JSON","stringify","headers","data","json","ok","err","console","warn","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nconst RatingColiver = () => {\n    const user = useSelector(s => s.user)\n    const token = useSelector(s => s.user && s.user.token)    \n    const coliving = useSelector(s => s.coliving)\n    const [coliver, setColiver] = useState ('')\n    const [coliverScore, setColiverScore] = useState('coliverScore')\n    \n    const handleColiverScore = e => setColiverScore(e.target.value)\n\n    const [isError, setError] = useState(false)\n   \n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const score = { coliverScore, coliver }\n        setError(false)\n        try {\n            const ret = await fetch('http://localhost:3300/user/coliver/rate', {\n                method: 'POST',\n                body: JSON.stringify(score),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                }\n            })\n            const data = await ret.json()\n            if (ret.ok)\n                setColiverScore(data)\n        } catch (err) {\n            console.warn('Error:', err)\n            setError(true)\n        }\n    }\n\n    return (\n        <form id=\"coliver-rating\" onSubmit={handleSubmit}>\n            <h2>Puntúa a tus compañeros</h2>\n            <div className=\"scorer-elements\">\n                <label>\n                    Nombre coliver:\n                    <input className=\"scored-item\" name=\"coliver\" required value={coliver.name} onChange={setColiver} />\n                </label>\n            </div>\n            <div className=\"scorer-elements\">\n              <label>\n                    Puntuación:\n                <select className=\"score\" name=\"coliverscore\" value={coliverScore} size=\"1\" onChange={handleColiverScore} >\n                    <option value=\"one\">1 estrella</option>\n                    <option value=\"two\">2 estrellas</option>\n                    <option value=\"three\">3 estrellas</option>\n                    <option value=\"four\">4 estrellas</option>\n                    <option value=\"five\">5 estrellas</option>\n                </select>\n              </label>\n            </div>\n            <button className=\"save-score\">Enviar</button>\n            {isError && <div>Error, inténtalo de nuevo</div>}\n        </form>\n    )\n}\n\nexport default RatingColiver\n"]},"metadata":{},"sourceType":"module"}