{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Colivings.js\";\nimport React, { useState, useEffect } from 'react';\nimport Search from './Search';\nimport Coliving from './Coliving';\nimport './Colivings.css';\n\nconst Colivings = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        colivings = _useState4[0],\n        setColivings = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  useEffect(() => {\n    fetch('http://localhost:3300/colivings').then(response => response.json()).then(jsonResponse => {\n      console.log(jsonResponse);\n      setColivings(jsonResponse);\n      setLoading(false);\n    });\n  }, []);\n\n  const Search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n    fetch('http://localhost:3300/colivings', {\n      method: 'POST',\n      body: JSON.stringify(searchValue),\n      headers: {\n        'Content-Type': 'application/json'\n      }.then(response => response.json()).then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          setColivings(jsonResponse.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      })\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colivingssearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    id: \"banner-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Welcome! Find your next home:\"), React.createElement(Search, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"colivings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, loading && !errorMessage ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"loading...\") : errorMessage ? React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, errorMessage) : colivings.map((coliving, index) => React.createElement(Coliving, {\n    key: `${index}-${coliving.id}`,\n    coliving: coliving,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))));\n};\n\nexport default Colivings;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Colivings.js"],"names":["React","useState","useEffect","Search","Coliving","Colivings","loading","setLoading","colivings","setColivings","errorMessage","setErrorMessage","fetch","then","response","json","jsonResponse","console","log","searchValue","method","body","JSON","stringify","headers","Response","Error","search","map","coliving","index","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACUJ,QAAQ,CAAC,IAAD,CADlB;AAAA;AAAA,QACbK,OADa;AAAA,QACJC,UADI;;AAAA,qBAEcN,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,QAEbO,SAFa;AAAA,QAEFC,YAFE;;AAAA,qBAGoBR,QAAQ,CAAC,IAAD,CAH5B;AAAA;AAAA,QAGbS,YAHa;AAAA,QAGCC,eAHD;;AAIpBT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,YAAY,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAP,MAAAA,YAAY,CAACO,YAAD,CAAZ;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMJ,MAAM,GAAIgB,WAAD,IAAiB;AAC5BZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCQ,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAF+B;AAGrCK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,QAGJX,IAHI,CAGCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHb,EAIJF,IAJI,CAICG,YAAY,IAAI;AAClB,YAAIA,YAAY,CAACS,QAAb,KAA0B,MAA9B,EAAsC;AAClChB,UAAAA,YAAY,CAACO,YAAY,CAACb,MAAd,CAAZ;AACAI,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SAHD,MAGO;AACHI,UAAAA,eAAe,CAACK,YAAY,CAACU,KAAd,CAAf;AACAnB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,OAZI;AAH4B,KAApC,CAAL;AAiBH,GApBD;;AAsBA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEoB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,OAAO,IAAI,CAACI,YAAZ,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,GAEGA,YAAY,GACZ;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,YAA/B,CADY,GAGJF,SAAS,CAACoB,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KACV,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,GAAEA,KAAM,IAAGD,QAAQ,CAACE,EAAG,EAAvC;AAA0C,IAAA,QAAQ,EAAEF,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANhB,CAJJ,CADJ;AAkBH,CAtDD;;AAyDA,eAAexB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Search from './Search';\nimport Coliving from './Coliving'\nimport './Colivings.css';\n\nconst Colivings = () => {\n    const [loading, setLoading] = useState(true)\n    const [colivings, setColivings] = useState([])\n    const [errorMessage, setErrorMessage] = useState(null);\n    useEffect(() => {\n        fetch('http://localhost:3300/colivings')\n            .then(response => response.json())\n            .then(jsonResponse => {\n                console.log(jsonResponse);\n                setColivings(jsonResponse);\n                setLoading(false);\n            });\n    }, []);\n\n    const Search = (searchValue) => {\n        setLoading(true);\n        setErrorMessage(null);\n        fetch('http://localhost:3300/colivings', {\n            method: 'POST',\n            body: JSON.stringify(searchValue),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n                .then(response => response.json())\n                .then(jsonResponse => {\n                    if (jsonResponse.Response === \"True\") {\n                        setColivings(jsonResponse.Search);\n                        setLoading(false);\n                    } else {\n                        setErrorMessage(jsonResponse.Error);\n                        setLoading(false);\n                    }\n                })\n        });\n    }\n\n    return (\n        <div className=\"colivingssearch\">\n            <section id=\"banner-search\"></section>\n            <h1>Welcome! Find your next home:</h1>\n            <Search search={search} />\n            <div className=\"colivings\">\n                {loading && !errorMessage ? (\n                    <span>loading...</span>\n                ) : errorMessage ? (\n                    <div className=\"errorMessage\">{errorMessage}</div>\n                ) : (\n                            colivings.map((coliving, index) => (\n                                <Coliving key={`${index}-${coliving.id}`} coliving={coliving} />\n                            ))\n                        )}\n            </div>\n        </div>\n    );\n};\n\n\nexport default Colivings\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}