{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useForm from \"./useForm\";\nimport validate from \"./validateLogin\";\nimport './Login.css';\n\nconst useFormField = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  return [value, e => setValue(e.target.value)];\n};\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const login = user => dispatch({\n    type: 'login',\n    user\n  });\n\n  const _useFormField = useFormField(),\n        _useFormField2 = _slicedToArray(_useFormField, 2),\n        email = _useFormField2[0],\n        setEmail = _useFormField2[1];\n\n  const _useFormField3 = useFormField(),\n        _useFormField4 = _slicedToArray(_useFormField3, 2),\n        password = _useFormField4[0],\n        setPassword = _useFormField4[1];\n\n  const history = useHistory();\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isError = _useState4[0],\n        setError = _useState4[1];\n\n  const isLoggedIn = useSelector(s => !!s.user);\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push(`/user`);\n    }\n  }, [isLoggedIn]);\n  /*const { handleChange, handleSubmit, values, errors } = useForm(\n      submit,\n      validate\n  );\n  */\n\n  function submit() {\n    console.log(\"Submitted Succesfully\");\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      email,\n      password\n    };\n    setError(false);\n\n    try {\n      const ret = await fetch('http://localhost:3300/login', {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await ret.json();\n      if (ret.ok) login(data);\n    } catch (err) {\n      console.warn('Error:', err);\n      setError(true);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    id: \"login\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: `${errors.email && \"inputError\"}`,\n    name: \"email\",\n    type: \"email\",\n    required: true,\n    value: values.email,\n    onChange: handleChange,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: `${errors.email && \"inputError\"}`,\n    name: \"password\",\n    type: \"password\",\n    required: true,\n    value: values.password,\n    onChange: handleChange,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Login\"), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Error, email o contrase\\xF1a incorrectos\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Login.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","useForm","validate","useFormField","value","setValue","e","target","Login","dispatch","login","user","type","email","setEmail","password","setPassword","history","isError","setError","isLoggedIn","s","push","submit","console","log","handleSubmit","preventDefault","ret","fetch","method","body","JSON","stringify","headers","data","json","ok","err","warn","errors","values","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,aAAP;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACGP,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,QAChBQ,KADgB;AAAA,QACTC,QADS;;AAEvB,SAAO,CAACD,KAAD,EAAQE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV,CAArB,CAAP;AACH,CAHD;;AAKA,MAAMI,KAAK,GAAG,MAAM;AAChB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AACA,QAAMY,KAAK,GAAIC,IAAD,IAAUF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,OAAR;AAAiBD,IAAAA;AAAjB,GAAD,CAAhC;;AAFgB,wBAGUR,YAAY,EAHtB;AAAA;AAAA,QAGTU,KAHS;AAAA,QAGFC,QAHE;;AAAA,yBAIgBX,YAAY,EAJ5B;AAAA;AAAA,QAITY,QAJS;AAAA,QAICC,WAJD;;AAMhB,QAAMC,OAAO,GAAGjB,UAAU,EAA1B;;AANgB,qBAOYJ,QAAQ,CAAC,KAAD,CAPpB;AAAA;AAAA,QAOTsB,OAPS;AAAA,QAOAC,QAPA;;AAShB,QAAMC,UAAU,GAAGrB,WAAW,CAACsB,CAAC,IAAI,CAAC,CAACA,CAAC,CAACV,IAAV,CAA9B;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuB,UAAJ,EAAgB;AACZH,MAAAA,OAAO,CAACK,IAAR,CAAc,OAAd;AACH;AACJ,GAJQ,EAIN,CAACF,UAAD,CAJM,CAAT;AAMA;;;;;;AAKA,WAASG,MAAT,GAAkB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAGD,QAAMC,YAAY,GAAG,MAAOpB,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACqB,cAAF;AACA,UAAMhB,IAAI,GAAG;AAAEE,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAb;AACAI,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAI;AACA,YAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,IAAf,CAF6C;AAGnDuB,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAH0C,OAAhC,CAAvB;AAQA,YAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACA,UAAIR,GAAG,CAACS,EAAR,EACI3B,KAAK,CAACyB,IAAD,CAAL;AACP,KAZD,CAYE,OAAOG,GAAP,EAAY;AACVd,MAAAA,OAAO,CAACe,IAAR,CAAa,QAAb,EAAuBD,GAAvB;AACAnB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GApBD;;AAsBA,SACI;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,QAAQ,EAAEO,YAA3B;AAAyC,IAAA,UAAU,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAG,GAAEc,MAAM,CAAC3B,KAAP,IAAgB,YAAa,EAAlD;AAAqD,IAAA,IAAI,EAAC,OAA1D;AAAkE,IAAA,IAAI,EAAC,OAAvE;AAA+E,IAAA,QAAQ,MAAvF;AAAwF,IAAA,KAAK,EAAE4B,MAAM,CAAC5B,KAAtG;AACI,IAAA,QAAQ,EAAE6B,YADd;AAC4B,IAAA,WAAW,EAAC,OADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGKF,MAAM,CAAC3B,KAAP,IAAgB;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB2B,MAAM,CAAC3B,KAA7B,CAHrB,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAG,GAAE2B,MAAM,CAAC3B,KAAP,IAAgB,YAAa,EAAlD;AAAqD,IAAA,IAAI,EAAC,UAA1D;AAAqE,IAAA,IAAI,EAAC,UAA1E;AAAqF,IAAA,QAAQ,MAA7F;AAA8F,IAAA,KAAK,EAAE4B,MAAM,CAAC1B,QAA5G;AACI,IAAA,QAAQ,EAAE2B,YADd;AAC4B,IAAA,WAAW,EAAC,UADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGKF,MAAM,CAACzB,QAAP,IAAmB;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsByB,MAAM,CAACzB,QAA7B,CAHxB,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXJ,EAYKG,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAZhB,CADJ;AAgBH,CAhED;;AAkEA,eAAeV,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport useForm from \"./useForm\";\nimport validate from \"./validateLogin\";\nimport './Login.css'\n\n\nconst useFormField = () => {\n    const [value, setValue] = useState('')\n    return [value, e => setValue(e.target.value)]\n}\n\nconst Login = () => {\n    const dispatch = useDispatch()\n    const login = (user) => dispatch({ type: 'login', user })\n    const [email, setEmail] = useFormField()\n    const [password, setPassword] = useFormField()\n\n    const history = useHistory()\n    const [isError, setError] = useState(false)\n\n    const isLoggedIn = useSelector(s => !!s.user)\n    useEffect(() => {\n        if (isLoggedIn) {\n            history.push(`/user`)\n        }\n    }, [isLoggedIn])\n\n    /*const { handleChange, handleSubmit, values, errors } = useForm(\n        submit,\n        validate\n    );\n*/\n    function submit() {\n        console.log(\"Submitted Succesfully\");\n    }\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const user = { email, password }\n        setError(false)\n        try {\n            const ret = await fetch('http://localhost:3300/login', {\n                method: 'POST',\n                body: JSON.stringify(user),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            const data = await ret.json()\n            if (ret.ok)\n                login(data)\n        } catch (err) {\n            console.warn('Error:', err)\n            setError(true)\n        }\n    }\n\n    return (\n        <form id=\"login\" onSubmit={handleSubmit} noValidate>\n            <div>\n                <input className={`${errors.email && \"inputError\"}`} name=\"email\" type=\"email\" required value={values.email}\n                    onChange={handleChange} placeholder=\"Email\" />\n                {errors.email && <p className=\"error\">{errors.email}</p>}\n            </div>\n            <div>\n                <input className={`${errors.email && \"inputError\"}`} name=\"password\" type=\"password\" required value={values.password}\n                    onChange={handleChange} placeholder=\"Password\" />\n                {errors.password && <p className=\"error\">{errors.password}</p>}\n            </div>\n            <button>Login</button>\n            {isError && <div>Error, email o contraseña incorrectos</div>}\n        </form>\n    )\n}\n\nexport default Login\n\n\n"]},"metadata":{},"sourceType":"module"}