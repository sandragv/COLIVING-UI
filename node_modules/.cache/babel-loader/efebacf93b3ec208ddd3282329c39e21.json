{"ast":null,"code":"import _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Colivings.js\";\nimport React, { useState, useEffect } from 'react';\nimport Search from './Search';\nimport Coliving from './Coliving';\n\nconst Colivings = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        colivings = _useState4[0],\n        setColivings = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  useEffect(() => {\n    fetch('http://localhost:3300/colivings').then(response => response.json()).then(c => setColivings(c));\n    setLoading(false);\n  }, []);\n\n  const FilteredSearch = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n    fetch('http://localhost:3300/colivings', {\n      method: 'POST',\n      body: JSON.stringify(searchValue),\n      headers: {\n        'Content-Type': 'application/json'\n      }.then(response => response.json()).then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          setColivings(jsonResponse.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      })\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colivingssearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Welcome! Find your next home:\"), React.createElement(Search, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, loading && !errorMessage ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"loading...\") : errorMessage ? React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, errorMessage) : colivings.map((coliving, index) => React.createElement(Movie, {\n    key: `${index}-${coliving.name}`,\n    coliving: coliving.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))));\n};\n\nexport default Colivings;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Colivings.js"],"names":["React","useState","useEffect","Search","Coliving","Colivings","loading","setLoading","colivings","setColivings","errorMessage","setErrorMessage","fetch","then","response","json","c","FilteredSearch","searchValue","method","body","JSON","stringify","headers","jsonResponse","Response","Error","map","coliving","index","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACUJ,QAAQ,CAAC,IAAD,CADlB;AAAA;AAAA,QACbK,OADa;AAAA,QACJC,UADI;;AAAA,qBAEcN,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,QAEbO,SAFa;AAAA,QAEFC,YAFE;;AAAA,qBAGoBR,QAAQ,CAAC,IAAD,CAH5B;AAAA;AAAA,QAGbS,YAHa;AAAA,QAGCC,eAHD;;AAIpBT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,CAAC,IAAIP,YAAY,CAACO,CAAD,CAF3B;AAGAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,GANQ,EAMN,EANM,CAAT;;AASA,QAAMU,cAAc,GAAIC,WAAD,IAAiB;AACpCX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCO,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAF+B;AAGrCK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,QAGRV,IAHQ,CAGHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHT,EAIRF,IAJQ,CAIHW,YAAY,IAAI;AAClB,YAAIA,YAAY,CAACC,QAAb,KAA0B,MAA9B,EAAsC;AACpChB,UAAAA,YAAY,CAACe,YAAY,CAACrB,MAAd,CAAZ;AACAI,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAHD,MAGO;AACHI,UAAAA,eAAe,CAACa,YAAY,CAACE,KAAd,CAAf;AACFnB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OAZM;AAH4B,KAApC,CAAL;AAiBK,GApBT;;AAqBQ,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADD,EAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,IAAI,CAACI,YAAZ,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAEIA,YAAY,GACf;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,YAA/B,CADe,GAGfF,SAAS,CAACmB,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KACZ,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAG,GAAEA,KAAM,IAAGD,QAAQ,CAACE,IAAK,EAAtC;AAAyC,IAAA,QAAQ,EAAEF,QAAQ,CAACE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CAHD,CADJ;AAiBA,CAnDZ;;AAoDA,eAAezB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Search from './Search'\nimport Coliving from './Coliving'\n\n\nconst Colivings = () => {\n    const [loading, setLoading] = useState(true)\n    const [colivings, setColivings] = useState([])\n    const [errorMessage, setErrorMessage] = useState(null);\n    useEffect(() => {\n        fetch('http://localhost:3300/colivings')\n            .then(response => response.json())\n            .then(c => setColivings(c))\n        setLoading(false);\n\n    }, []);\n\n\n    const FilteredSearch = (searchValue) => {\n        setLoading(true);\n        setErrorMessage(null);\n        fetch('http://localhost:3300/colivings', {\n            method: 'POST',\n            body: JSON.stringify(searchValue),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n            .then(response => response.json())\n            .then(jsonResponse => {\n                if (jsonResponse.Response === \"True\") {\n                  setColivings(jsonResponse.Search);\n                  setLoading(false);\n                } else {\n                    setErrorMessage(jsonResponse.Error);\n                  setLoading(false);\n                }\n              })\n              });\n            }\n            return (\n                <div className=\"colivingssearch\">\n                 <h1>Welcome! Find your next home:</h1>\n                 <Search />\n                 <div className=\"movies\">\n                   {loading && !errorMessage ? (\n                    <span>loading...</span>\n                    ) : errorMessage ? (\n                     <div className=\"errorMessage\">{errorMessage}</div>\n                   ) : (\n                     colivings.map((coliving, index) => (\n                       <Movie key={`${index}-${coliving.name}`} coliving={coliving.name} />\n                     ))\n                   )}\n                 </div>\n               </div>\n             );\n           };    \nexport default Colivings\n\n\n\n"]},"metadata":{},"sourceType":"module"}