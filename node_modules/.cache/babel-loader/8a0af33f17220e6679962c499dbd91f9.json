{"ast":null,"code":"import _objectSpread from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\n\nconst useFormHostLogin = (callback, validate) => {\n  const dispatch = useDispatch();\n\n  const login = user => dispatch({\n    type: 'login',\n    user\n  });\n\n  const _useState = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    password: \"\",\n    colivingName: \"\",\n    photo: \"\",\n    apartaments: \"\",\n    rooms: \"\",\n    roomType: \"\",\n    website: \"\",\n    facebook: \"\",\n    instagram: \"\",\n    twitter: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isSubmitting = _useState6[0],\n        setIsSubmitting = _useState6[1];\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setValues(_objectSpread({}, values, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = values;\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    try {\n      const ret = await fetch('http://localhost:3300/host/signup', {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await ret.json();\n      if (ret.ok) login(data);\n    } catch (err) {\n      console.warn('Error:', err);\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\nexport default useFormHostLogin;","map":{"version":3,"sources":["/home/hab23/Documents/coliving/development/hab_gestion_coliving_ui/src/Authentication/useFormHostSignup.js"],"names":["useState","useEffect","useDispatch","useFormHostLogin","callback","validate","dispatch","login","user","type","name","surname","email","password","colivingName","photo","apartaments","rooms","roomType","website","facebook","instagram","twitter","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","target","value","handleSubmit","e","preventDefault","ret","fetch","method","body","JSON","stringify","headers","data","json","ok","err","console","warn","Object","keys","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,QAAMK,KAAK,GAAIC,IAAD,IAAUF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,OAAR;AAAiBD,IAAAA;AAAjB,GAAD,CAAhC;;AAF+C,oBAInBR,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAC,EAAP;AAAWC,IAAAA,OAAO,EAAE,EAApB;AAAwBC,IAAAA,KAAK,EAAE,EAA/B;AAAmCC,IAAAA,QAAQ,EAAE,EAA7C;AAAiDC,IAAAA,YAAY,EAAC,EAA9D;AAAkEC,IAAAA,KAAK,EAAC,EAAxE;AAA4EC,IAAAA,WAAW,EAAC,EAAxF;AAA4FC,IAAAA,KAAK,EAAC,EAAlG;AAAsGC,IAAAA,QAAQ,EAAC,EAA/G;AAAmHC,IAAAA,OAAO,EAAC,EAA3H;AAA+HC,IAAAA,QAAQ,EAAC,EAAxI;AAA4IC,IAAAA,SAAS,EAAC,EAAtJ;AAA0JC,IAAAA,OAAO,EAAC;AAAlK,GAAD,CAJW;AAAA;AAAA,QAIxCC,MAJwC;AAAA,QAIhCC,SAJgC;;AAAA,qBAKnBxB,QAAQ,CAAC,EAAD,CALW;AAAA;AAAA,QAKxCyB,MALwC;AAAA,QAKhCC,SALgC;;AAAA,qBAMP1B,QAAQ,CAAC,KAAD,CAND;AAAA;AAAA,QAMxC2B,YANwC;AAAA,QAM1BC,eAN0B;;AAQ/C,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,0BACJA,KAAK,CAACC,MADF;AAAA,UACpBrB,IADoB,iBACpBA,IADoB;AAAA,UACdsB,KADc,iBACdA,KADc;AAE5BR,IAAAA,SAAS,mBACJD,MADI;AAEP,OAACb,IAAD,GAAQsB;AAFD,OAAT;AAID,GAND;;AAQA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM3B,IAAI,GAAGe,MAAb;AACAG,IAAAA,SAAS,CAACrB,QAAQ,CAACkB,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC3DC,QAAAA,MAAM,EAAE,MADmD;AAE3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejC,IAAf,CAFqD;AAG3DkC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHkD,OAAtC,CAAvB;AAQA,YAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACA,UAAIR,GAAG,CAACS,EAAR,EACEtC,KAAK,CAACoC,IAAD,CAAL;AACH,KAZD,CAYE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuBF,GAAvB;AACD;AACJ,GApBC;;AAsBF7C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgD,MAAM,CAACC,IAAP,CAAYzB,MAAZ,EAAoB0B,MAApB,KAA+B,CAA/B,IAAoCxB,YAAxC,EAAsD;AACpDvB,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACqB,MAAD,CAJM,CAAT;AAMA,SAAO;AACLI,IAAAA,YADK;AAELI,IAAAA,YAFK;AAGLV,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMC,CAlDD;;AAoDA,eAAetB,gBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux'\n\nconst useFormHostLogin = (callback, validate) => {\n  const dispatch = useDispatch()\n  const login = (user) => dispatch({ type: 'login', user })\n\n  const [values, setValues] = useState({ name:\"\", surname: \"\", email: \"\", password: \"\", colivingName:\"\", photo:\"\", apartaments:\"\", rooms:\"\", roomType:\"\", website:\"\", facebook:\"\", instagram:\"\", twitter:\"\" });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const user = values\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    try {\n      const ret = await fetch('http://localhost:3300/host/signup', {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      const data = await ret.json()\n      if (ret.ok)\n        login(data)\n    } catch (err) {\n      console.warn('Error:', err)\n    }\n};\n\nuseEffect(() => {\n  if (Object.keys(errors).length === 0 && isSubmitting) {\n    callback();\n  }\n}, [errors]);\n\nreturn {\n  handleChange,\n  handleSubmit,\n  values,\n  errors\n};\n};\n\nexport default useFormHostLogin;"]},"metadata":{},"sourceType":"module"}